/*
  Pizza delivery System - UML class diagram written in Umple
*/

//Namespace for core of the system.
namespace ca.mcgill.ecse.pds.model;

use PDSPersistence.ump;

class PDS {
 1 <@>- * Pizza pizzas;
 1 <@>- * Customer customers;
 1 <@>- * Ingredient ingredients;
 1 <@>- * Order orders;
}

//Pizza abstract
class Pizza {
  Integer size = 12;
  * -> * Ingredient ingredients;
  abstract float getPrice();
}

class MenuPizza {
  isA Pizza;
  String name;
  before constructor, setName {
    if (aName == null || aName.length() == 0) {
	  throw new RuntimeException("The name for a pizza on the Menu cannot be empty.");
	}
  }
  Float calorieCount;
  before constructor, setCalorieCount {
    if (aCalorieCount <= 0.0f ) {
	  throw new RuntimeException("The calorie count for a pizza on the Menu cannot be less than zero.");
	}
  }
  Float price;
  before constructor, setPrice {
    if (aPrice <= 0.0f ) {
	  throw new RuntimeException("The price for a pizza on the Menu cannot be less than zero.");
	}
  }
}

class CustomPizza {
  isA Pizza;
  Float basePrice = 5.0f;
}

class Ingredient {
  String name;
  before constructor, setName {
    if (aName == null || aName.length() == 0) {
	  throw new RuntimeException("The name of an ingredient cannot be empty.");
	}
  }
  Float price;
  before constructor, setPrice {
    if (aPrice <= 0.0f) {
	  throw new RuntimeException("The price cannot be less than zero");
	}
  }
}

class Customer {
  autounique id;
  String name;
  String phoneNumber;
  String emailAddress;
  String deliveryAddress;
  1 -- * Order orders;
}

class Order {
  autounique number;
  Date date;
  1 <@>- * OrderItem orderItem;
  Float totalPrice;
  Boolean isDelivered = false; 
}

class OrderItem {
 Float price;
  * -> 1 Pizza;
  1 <@>- * Customization customizations;
}

class Customization {
  enum Type { Add, Remove , Replace }  
  Type type;
  * -> * Ingredient ingredients;
}
